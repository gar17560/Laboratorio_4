

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 16 17:36:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0013                     _SSPBUF	set	19
   285  0014                     _SSPCON	set	20
   286  0018                     _RCSTAbits	set	24
   287  0005                     _PORTA	set	5
   288  0006                     _PORTB	set	6
   289  0008                     _PORTD	set	8
   290  001A                     _RCREG	set	26
   291  000C                     _PIR1bits	set	12
   292  0019                     _TXREG	set	25
   293  0094                     _SSPSTATbits	set	148
   294  0094                     _SSPSTAT	set	148
   295  009A                     _SPBRGH	set	154
   296  0099                     _SPBRG	set	153
   297  0098                     _TXSTAbits	set	152
   298  0085                     _TRISA	set	133
   299  0088                     _TRISD	set	136
   300  0086                     _TRISB	set	134
   301  043B                     _TRISC3	set	1083
   302  043D                     _TRISC5	set	1085
   303  0187                     _BAUDCTLbits	set	391
   304  0188                     _ANSEL	set	392
   305  0189                     _ANSELH	set	393
   306                           
   307                           ; #config settings
   308  0000                     
   309                           	psect	cinit
   310  07F9                     start_initialization:	
   311  07F9                     __initialization:	
   312                           
   313                           ; Clear objects allocated to COMMON
   314  07F9  01F6               	clrf	__pbssCOMMON& (0+127)
   315  07FA  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   316  07FB  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   317  07FC                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320  07FC                     __end_of__initialization:	
   321  07FC  0183               	clrf	3
   322  07FD  120A  118A  2F8F   	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMMON
   325  0076                     __pbssCOMMON:	
   326  0076                     _recibir1:	
   327  0076                     	ds	1
   328  0077                     _pot2:	
   329  0077                     	ds	1
   330  0078                     _pot1:	
   331  0078                     	ds	1
   332                           
   333                           	psect	cstackCOMMON
   334  0070                     __pcstackCOMMON:	
   335  0070                     ?_config:	
   336  0070                     ??_config:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_spiInit:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_init_serial:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ??_init_serial:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_spiWrite:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ??_spiWrite:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_spiRead:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ??_spiRead:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_main:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_spiReceiveWait:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ??_spiReceiveWait:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     spiInit@sDataSample:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     spiWrite@dat:	
   373                           ; 1 bytes @ 0x0
   374                           
   375                           
   376                           ; 1 bytes @ 0x0
   377  0070                     	ds	1
   378  0071                     spiInit@sClockIdle:	
   379                           
   380                           ; 1 bytes @ 0x1
   381  0071                     	ds	1
   382  0072                     spiInit@sTransmitEdge:	
   383                           
   384                           ; 1 bytes @ 0x2
   385  0072                     	ds	1
   386  0073                     ??_spiInit:	
   387  0073                     spiInit@sType:	
   388                           ; 1 bytes @ 0x3
   389                           
   390                           
   391                           ; 1 bytes @ 0x3
   392  0073                     	ds	1
   393  0074                     ??_main:	
   394                           
   395                           ; 1 bytes @ 0x4
   396  0074                     	ds	2
   397                           
   398                           	psect	maintext
   399  078F                     __pmaintext:	
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   402 ;;
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 38 in file "LAB_4_M.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0, pclath, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : B00/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0
   421 ;;      Temps:          2       0       0       0       0
   422 ;;      Totals:         2       0       0       0       0
   423 ;;Total ram usage:        2 bytes
   424 ;; Hardware stack levels required when called:    2
   425 ;; This function calls:
   426 ;;		_config
   427 ;;		_init_serial
   428 ;;		_spiInit
   429 ;;		_spiRead
   430 ;;		_spiWrite
   431 ;; This function is called by:
   432 ;;		Startup code after reset
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           
   437                           ;psect for function _main
   438  078F                     _main:	
   439  078F                     l769:	
   440                           ;incstack = 0
   441                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   442                           
   443                           
   444                           ;LAB_4_M.c: 39:     config();
   445  078F  120A  118A  2776  120A  118A  	fcall	_config
   446  0794                     l771:	
   447                           
   448                           ;LAB_4_M.c: 40:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
   449  0794  01F0               	clrf	spiInit@sDataSample
   450  0795  01F1               	clrf	spiInit@sClockIdle
   451  0796  01F2               	clrf	spiInit@sTransmitEdge
   452  0797  3020               	movlw	32
   453  0798  120A  118A  2760  120A  118A  	fcall	_spiInit
   454  079D                     l773:	
   455                           
   456                           ;LAB_4_M.c: 41:     init_serial();
   457  079D  120A  118A  274B  120A  118A  	fcall	_init_serial
   458  07A2                     l775:	
   459                           
   460                           ;LAB_4_M.c: 44:         spiWrite(0xFF);
   461  07A2  30FF               	movlw	255
   462  07A3  120A  118A  2735  120A  118A  	fcall	_spiWrite
   463  07A8                     l777:	
   464                           
   465                           ;LAB_4_M.c: 45:         pot1 = spiRead();
   466  07A8  120A  118A  2742  120A  118A  	fcall	_spiRead
   467  07AD  00F4               	movwf	??_main
   468  07AE  0874               	movf	??_main,w
   469  07AF  00F8               	movwf	_pot1
   470  07B0                     l779:	
   471                           
   472                           ;LAB_4_M.c: 46:         _delay((unsigned long)((10)*(4000000/4000.0)));
   473  07B0  300D               	movlw	13
   474  07B1  00F5               	movwf	??_main+1
   475  07B2  30FB               	movlw	251
   476  07B3  00F4               	movwf	??_main
   477  07B4                     u107:	
   478  07B4  0BF4               	decfsz	??_main,f
   479  07B5  2FB4               	goto	u107
   480  07B6  0BF5               	decfsz	??_main+1,f
   481  07B7  2FB4               	goto	u107
   482  07B8  2FB9               	nop2
   483                           
   484                           ;LAB_4_M.c: 48:         spiWrite(0x0F);
   485  07B9  300F               	movlw	15
   486  07BA  120A  118A  2735  120A  118A  	fcall	_spiWrite
   487                           
   488                           ;LAB_4_M.c: 49:         pot2 = spiRead();
   489  07BF  120A  118A  2742  120A  118A  	fcall	_spiRead
   490  07C4  00F4               	movwf	??_main
   491  07C5  0874               	movf	??_main,w
   492  07C6  00F7               	movwf	_pot2
   493  07C7                     l781:	
   494                           
   495                           ;LAB_4_M.c: 50:         _delay((unsigned long)((10)*(4000000/4000.0)));
   496  07C7  300D               	movlw	13
   497  07C8  00F5               	movwf	??_main+1
   498  07C9  30FB               	movlw	251
   499  07CA  00F4               	movwf	??_main
   500  07CB                     u117:	
   501  07CB  0BF4               	decfsz	??_main,f
   502  07CC  2FCB               	goto	u117
   503  07CD  0BF5               	decfsz	??_main+1,f
   504  07CE  2FCB               	goto	u117
   505  07CF  2FD0               	nop2
   506  07D0                     l783:	
   507                           
   508                           ;LAB_4_M.c: 52:         TXREG = pot1;
   509  07D0  0878               	movf	_pot1,w
   510  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   511  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   512  07D3  0099               	movwf	25	;volatile
   513  07D4                     l46:	
   514                           ;LAB_4_M.c: 54:         }
   515                           
   516                           
   517                           ;LAB_4_M.c: 53:         while(PIR1bits.TXIF == 0){
   518  07D4  1E0C               	btfss	12,4	;volatile
   519  07D5  2FD7               	goto	u71
   520  07D6  2FD8               	goto	u70
   521  07D7                     u71:	
   522  07D7  2FD4               	goto	l46
   523  07D8                     u70:	
   524  07D8                     l785:	
   525                           
   526                           ;LAB_4_M.c: 56:         TXREG = pot2;
   527  07D8  0877               	movf	_pot2,w
   528  07D9  0099               	movwf	25	;volatile
   529  07DA                     l49:	
   530                           ;LAB_4_M.c: 58:         }
   531                           
   532                           
   533                           ;LAB_4_M.c: 57:         while(PIR1bits.TXIF == 0){
   534  07DA  1E0C               	btfss	12,4	;volatile
   535  07DB  2FDD               	goto	u81
   536  07DC  2FDE               	goto	u80
   537  07DD                     u81:	
   538  07DD  2FDA               	goto	l49
   539  07DE                     u80:	
   540  07DE                     l51:	
   541                           
   542                           ;LAB_4_M.c: 61:         if (PIR1bits.RCIF == 1){
   543  07DE  1E8C               	btfss	12,5	;volatile
   544  07DF  2FE1               	goto	u91
   545  07E0  2FE2               	goto	u90
   546  07E1                     u91:	
   547  07E1  2FE6               	goto	l52
   548  07E2                     u90:	
   549  07E2                     l787:	
   550                           
   551                           ;LAB_4_M.c: 62:             recibir1 = RCREG;
   552  07E2  081A               	movf	26,w	;volatile
   553  07E3  00F4               	movwf	??_main
   554  07E4  0874               	movf	??_main,w
   555  07E5  00F6               	movwf	_recibir1
   556  07E6                     l52:	
   557                           ;LAB_4_M.c: 63:         }
   558                           
   559                           
   560                           ;LAB_4_M.c: 65:         _delay((unsigned long)((100)*(4000000/4000.0)));
   561  07E6  3082               	movlw	130
   562  07E7  00F5               	movwf	??_main+1
   563  07E8  30DD               	movlw	221
   564  07E9  00F4               	movwf	??_main
   565  07EA                     u127:	
   566  07EA  0BF4               	decfsz	??_main,f
   567  07EB  2FEA               	goto	u127
   568  07EC  0BF5               	decfsz	??_main+1,f
   569  07ED  2FEA               	goto	u127
   570  07EE  2FEF               	nop2
   571                           
   572                           ;LAB_4_M.c: 66:         PORTD = pot2;
   573  07EF  0877               	movf	_pot2,w
   574  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   575  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   576  07F2  0088               	movwf	8	;volatile
   577                           
   578                           ;LAB_4_M.c: 67:         PORTB = recibir1;
   579  07F3  0876               	movf	_recibir1,w
   580  07F4  0086               	movwf	6	;volatile
   581  07F5  2FA2               	goto	l775
   582  07F6  120A  118A  2800   	ljmp	start
   583  07F9                     __end_of_main:	
   584                           
   585                           	psect	text1
   586  0735                     __ptext1:	
   587 ;; *************** function _spiWrite *****************
   588 ;; Defined at:
   589 ;;		line 52 in file "funciones.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  dat             1    wreg     unsigned char 
   592 ;; Auto vars:     Size  Location     Type
   593 ;;  dat             1    0[COMMON] unsigned char 
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         0       0       0       0       0
   604 ;;      Locals:         1       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0
   606 ;;      Totals:         1       0       0       0       0
   607 ;;Total ram usage:        1 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _spiWrite
   618  0735                     _spiWrite:	
   619                           
   620                           ;incstack = 0
   621                           ; Regs used in _spiWrite: [wreg]
   622                           ;spiWrite@dat stored from wreg
   623  0735  00F0               	movwf	spiWrite@dat
   624  0736                     l725:	
   625                           
   626                           ;funciones.c: 52: void spiWrite(char dat);funciones.c: 53: {;funciones.c: 54:     SSPBUF
      +                           = dat;
   627  0736  0870               	movf	spiWrite@dat,w
   628  0737  1283               	bcf	3,5	;RP0=0, select bank0
   629  0738  1303               	bcf	3,6	;RP1=0, select bank0
   630  0739  0093               	movwf	19	;volatile
   631  073A                     l97:	
   632  073A  0008               	return
   633  073B                     __end_of_spiWrite:	
   634                           
   635                           	psect	text2
   636  0742                     __ptext2:	
   637 ;; *************** function _spiRead *****************
   638 ;; Defined at:
   639 ;;		line 65 in file "funciones.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      unsigned char 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    1
   660 ;; This function calls:
   661 ;;		_spiReceiveWait
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _spiRead
   669  0742                     _spiRead:	
   670  0742                     l727:	
   671                           ;incstack = 0
   672                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   673                           
   674                           
   675                           ;funciones.c: 67:     spiReceiveWait();
   676  0742  120A  118A  273B  120A  118A  	fcall	_spiReceiveWait
   677  0747                     l729:	
   678                           
   679                           ;funciones.c: 68:     return(SSPBUF);
   680  0747  1283               	bcf	3,5	;RP0=0, select bank0
   681  0748  1303               	bcf	3,6	;RP1=0, select bank0
   682  0749  0813               	movf	19,w	;volatile
   683  074A                     l105:	
   684  074A  0008               	return
   685  074B                     __end_of_spiRead:	
   686                           
   687                           	psect	text3
   688  073B                     __ptext3:	
   689 ;; *************** function _spiReceiveWait *****************
   690 ;; Defined at:
   691 ;;		line 47 in file "funciones.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		None
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   705 ;;      Params:         0       0       0       0       0
   706 ;;      Locals:         0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0
   708 ;;      Totals:         0       0       0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_spiRead
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           
   719                           ;psect for function _spiReceiveWait
   720  073B                     _spiReceiveWait:	
   721  073B                     l697:	
   722                           ;incstack = 0
   723                           ; Regs used in _spiReceiveWait: []
   724                           
   725  073B                     l91:	
   726                           ;funciones.c: 49:     while ( !SSPSTATbits.BF );
   727                           
   728  073B  1683               	bsf	3,5	;RP0=1, select bank1
   729  073C  1303               	bcf	3,6	;RP1=0, select bank1
   730  073D  1C14               	btfss	20,0	;volatile
   731  073E  2F40               	goto	u11
   732  073F  2F41               	goto	u10
   733  0740                     u11:	
   734  0740  2F3B               	goto	l91
   735  0741                     u10:	
   736  0741                     l94:	
   737  0741  0008               	return
   738  0742                     __end_of_spiReceiveWait:	
   739                           
   740                           	psect	text4
   741  0760                     __ptext4:	
   742 ;; *************** function _spiInit *****************
   743 ;; Defined at:
   744 ;;		line 30 in file "funciones.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  sType           1    wreg     enum E1292
   747 ;;  sDataSample     1    0[COMMON] enum E1300
   748 ;;  sClockIdle      1    1[COMMON] enum E1304
   749 ;;  sTransmitEdg    1    2[COMMON] enum E1308
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  sType           1    3[COMMON] enum E1292
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         3       0       0       0       0
   762 ;;      Locals:         1       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0
   764 ;;      Totals:         4       0       0       0       0
   765 ;;Total ram usage:        4 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           
   775                           ;psect for function _spiInit
   776  0760                     _spiInit:	
   777                           
   778                           ;incstack = 0
   779                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   780                           ;spiInit@sType stored from wreg
   781  0760  00F3               	movwf	spiInit@sType
   782  0761                     l759:	
   783                           
   784                           ;funciones.c: 30: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);funciones.c: 31: {;funciones.c: 32:     
      +                          TRISC5 = 0;
   785  0761  1683               	bsf	3,5	;RP0=1, select bank1
   786  0762  1303               	bcf	3,6	;RP1=0, select bank1
   787  0763  1287               	bcf	7,5	;volatile
   788                           
   789                           ;funciones.c: 33:     if(sType & 0b00000100)
   790  0764  1D73               	btfss	spiInit@sType,2
   791  0765  2F67               	goto	u61
   792  0766  2F68               	goto	u60
   793  0767                     u61:	
   794  0767  2F6C               	goto	l765
   795  0768                     u60:	
   796  0768                     l761:	
   797                           
   798                           ;funciones.c: 34:     {;funciones.c: 35:         SSPSTAT = sTransmitEdge;
   799  0768  0872               	movf	spiInit@sTransmitEdge,w
   800  0769  0094               	movwf	20	;volatile
   801  076A                     l763:	
   802                           
   803                           ;funciones.c: 36:         TRISC3 = 1;
   804  076A  1587               	bsf	7,3	;volatile
   805                           
   806                           ;funciones.c: 37:     }
   807  076B  2F70               	goto	l87
   808  076C                     l765:	
   809                           
   810                           ;funciones.c: 39:     {;funciones.c: 40:         SSPSTAT = sDataSample | sTransmitEdge;
   811  076C  0870               	movf	spiInit@sDataSample,w
   812  076D  0472               	iorwf	spiInit@sTransmitEdge,w
   813  076E  0094               	movwf	20	;volatile
   814  076F                     l767:	
   815                           
   816                           ;funciones.c: 41:         TRISC3 = 0;
   817  076F  1187               	bcf	7,3	;volatile
   818  0770                     l87:	
   819                           ;funciones.c: 42:     }
   820                           
   821                           
   822                           ;funciones.c: 44:     SSPCON = sType | sClockIdle;
   823  0770  0873               	movf	spiInit@sType,w
   824  0771  0471               	iorwf	spiInit@sClockIdle,w
   825  0772  1283               	bcf	3,5	;RP0=0, select bank0
   826  0773  1303               	bcf	3,6	;RP1=0, select bank0
   827  0774  0094               	movwf	20	;volatile
   828  0775                     l88:	
   829  0775  0008               	return
   830  0776                     __end_of_spiInit:	
   831                           
   832                           	psect	text5
   833  074B                     __ptext5:	
   834 ;; *************** function _init_serial *****************
   835 ;; Defined at:
   836 ;;		line 14 in file "funciones.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0
   853 ;;      Totals:         0       0       0       0       0
   854 ;;Total ram usage:        0 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           
   864                           ;psect for function _init_serial
   865  074B                     _init_serial:	
   866  074B                     l711:	
   867                           ;incstack = 0
   868                           ; Regs used in _init_serial: [wreg+status,2]
   869                           
   870                           
   871                           ;funciones.c: 17:     TXSTAbits.SYNC = 0;
   872  074B  1683               	bsf	3,5	;RP0=1, select bank1
   873  074C  1303               	bcf	3,6	;RP1=0, select bank1
   874  074D  1218               	bcf	24,4	;volatile
   875                           
   876                           ;funciones.c: 18:     TXSTAbits.BRGH = 1;
   877  074E  1518               	bsf	24,2	;volatile
   878                           
   879                           ;funciones.c: 19:     BAUDCTLbits.BRG16 = 1;
   880  074F  1683               	bsf	3,5	;RP0=1, select bank3
   881  0750  1703               	bsf	3,6	;RP1=1, select bank3
   882  0751  1587               	bsf	7,3	;volatile
   883  0752                     l713:	
   884                           
   885                           ;funciones.c: 20:     SPBRG = 103;
   886  0752  3067               	movlw	103
   887  0753  1683               	bsf	3,5	;RP0=1, select bank1
   888  0754  1303               	bcf	3,6	;RP1=0, select bank1
   889  0755  0099               	movwf	25	;volatile
   890  0756                     l715:	
   891                           
   892                           ;funciones.c: 21:     SPBRGH = 0;
   893  0756  019A               	clrf	26	;volatile
   894  0757                     l717:	
   895                           
   896                           ;funciones.c: 23:     RCSTAbits.SPEN = 1;
   897  0757  1283               	bcf	3,5	;RP0=0, select bank0
   898  0758  1303               	bcf	3,6	;RP1=0, select bank0
   899  0759  1798               	bsf	24,7	;volatile
   900  075A                     l719:	
   901                           
   902                           ;funciones.c: 24:     RCSTAbits.RX9 = 0;
   903  075A  1318               	bcf	24,6	;volatile
   904  075B                     l721:	
   905                           
   906                           ;funciones.c: 25:     RCSTAbits.CREN = 1;
   907  075B  1618               	bsf	24,4	;volatile
   908  075C                     l723:	
   909                           
   910                           ;funciones.c: 27:     TXSTAbits.TXEN = 1;
   911  075C  1683               	bsf	3,5	;RP0=1, select bank1
   912  075D  1303               	bcf	3,6	;RP1=0, select bank1
   913  075E  1698               	bsf	24,5	;volatile
   914  075F                     l83:	
   915  075F  0008               	return
   916  0760                     __end_of_init_serial:	
   917                           
   918                           	psect	text6
   919  0776                     __ptext6:	
   920 ;; *************** function _config *****************
   921 ;; Defined at:
   922 ;;		line 73 in file "LAB_4_M.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		status,2
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0
   939 ;;      Totals:         0       0       0       0       0
   940 ;;Total ram usage:        0 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_main
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function _config
   951  0776                     _config:	
   952  0776                     l699:	
   953                           ;incstack = 0
   954                           ; Regs used in _config: [status,2]
   955                           
   956                           
   957                           ;LAB_4_M.c: 74:     PORTB = 0x00;
   958  0776  1283               	bcf	3,5	;RP0=0, select bank0
   959  0777  1303               	bcf	3,6	;RP1=0, select bank0
   960  0778  0186               	clrf	6	;volatile
   961                           
   962                           ;LAB_4_M.c: 75:     TRISB = 0x00;
   963  0779  1683               	bsf	3,5	;RP0=1, select bank1
   964  077A  1303               	bcf	3,6	;RP1=0, select bank1
   965  077B  0186               	clrf	6	;volatile
   966                           
   967                           ;LAB_4_M.c: 76:     ANSELH = 0x00;
   968  077C  1683               	bsf	3,5	;RP0=1, select bank3
   969  077D  1703               	bsf	3,6	;RP1=1, select bank3
   970  077E  0189               	clrf	9	;volatile
   971                           
   972                           ;LAB_4_M.c: 78:     PORTD = 0x00;
   973  077F  1283               	bcf	3,5	;RP0=0, select bank0
   974  0780  1303               	bcf	3,6	;RP1=0, select bank0
   975  0781  0188               	clrf	8	;volatile
   976                           
   977                           ;LAB_4_M.c: 79:     TRISD = 0x00;
   978  0782  1683               	bsf	3,5	;RP0=1, select bank1
   979  0783  1303               	bcf	3,6	;RP1=0, select bank1
   980  0784  0188               	clrf	8	;volatile
   981                           
   982                           ;LAB_4_M.c: 81:     PORTA = 0;
   983  0785  1283               	bcf	3,5	;RP0=0, select bank0
   984  0786  1303               	bcf	3,6	;RP1=0, select bank0
   985  0787  0185               	clrf	5	;volatile
   986                           
   987                           ;LAB_4_M.c: 82:     TRISA = 0;
   988  0788  1683               	bsf	3,5	;RP0=1, select bank1
   989  0789  1303               	bcf	3,6	;RP1=0, select bank1
   990  078A  0185               	clrf	5	;volatile
   991                           
   992                           ;LAB_4_M.c: 83:     ANSEL = 0;
   993  078B  1683               	bsf	3,5	;RP0=1, select bank3
   994  078C  1703               	bsf	3,6	;RP1=1, select bank3
   995  078D  0188               	clrf	8	;volatile
   996  078E                     l58:	
   997  078E  0008               	return
   998  078F                     __end_of_config:	
   999  007E                     btemp	set	126	;btemp
  1000  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                             _config
                        _init_serial
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _init_serial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _init_serial
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 16 17:36:02 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l51 07DE  
                      l52 07E6                        l46 07D4                        l49 07DA  
                      l58 078E                        l83 075F                        l91 073B  
                      l94 0741                        l87 0770                        l88 0775  
                      l97 073A                        u10 0741                        u11 0740  
                      u60 0768                        u61 0767                        u70 07D8  
                      u71 07D7                        u80 07DE                        u81 07DD  
                      u90 07E2                        u91 07E1                       l105 074A  
                     l711 074B                       l721 075B                       l713 0752  
                     l723 075C                       l715 0756                       l717 0757  
                     l725 0736                       l719 075A                       l727 0742  
                     l761 0768                       l729 0747                       l763 076A  
                     l771 0794                       l765 076C                       l781 07C7  
                     l773 079D                       l767 076F                       l759 0761  
                     l783 07D0                       l775 07A2                       l697 073B  
                     l785 07D8                       l777 07A8                       l769 078F  
                     l699 0776                       l787 07E2                       l779 07B0  
                     u107 07B4                       u117 07CB                       u127 07EA  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _main 078F                      _pot1 0078                      _pot2 0077  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _RCREG 001A                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _TXREG 0019  
            ?_init_serial 0070            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
         __end_of_spiInit 0776           __end_of_spiRead 074B                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07F9  
            __end_of_main 07F9                    ??_main 0074                    _ANSELH 0189  
                  _SPBRGH 009A                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  _config 0776          __end_of_spiWrite 073B                 ??_spiInit 0073  
               ??_spiRead 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
    __size_of_init_serial 0015                __pmaintext 078F                   ?_config 0070  
 __size_of_spiReceiveWait 0007                   _SSPSTAT 0094                 ?_spiWrite 0070  
         __size_of_config 0019                   __ptext1 0735                   __ptext2 0742  
                 __ptext3 073B                   __ptext4 0760                   __ptext5 074B  
                 __ptext6 0776                   _spiInit 0760                   _spiRead 0742  
    end_of_initialization 07FC                 _RCSTAbits 0018                ??_spiWrite 0070  
             spiWrite@dat 0070                 _TXSTAbits 0098            _spiReceiveWait 073B  
             _BAUDCTLbits 0187            __end_of_config 078F       start_initialization 07F9  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 0742                  ??_config 0070  
           ??_init_serial 0070               __pbssCOMMON 0076                 ___latbits 0002  
         ?_spiReceiveWait 0070         __size_of_spiWrite 0006                  ?_spiInit 0070  
                ?_spiRead 0070       __end_of_init_serial 0760      spiInit@sTransmitEdge 0072  
      spiInit@sDataSample 0070                  _PIR1bits 000C               _init_serial 074B  
        __size_of_spiInit 0016          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 006A                  _recibir1 0076                  _spiWrite 0735  
            spiInit@sType 0073         spiInit@sClockIdle 0071          ??_spiReceiveWait 0070  
